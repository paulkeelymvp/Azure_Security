{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ManageOfficeTenantId": {
      "type": "string",
      "defaultValue": "tenant"
    },
    "WinDefenderAppRestrictionLogicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "office365_Connection_Name": {
      "type": "string",
      "defaultValue": "office365Sentinel"
    },
    "azuresentinel_Connection_Name": {
      "type": "string",
      "defaultValue": "winDefenderSentinel"
    },
    "azuresentinel_token:resourceUri": {
      "type": "string",
      "metadata": {
        "description": "The resource you are requesting authorization to use."
      },
      "defaultValue": "https://management.azure.com/"
    },
    "azuresentinel_token:grantType": {
      "type": "string",
      "metadata": {
        "description": "Grant type"
      },
      "defaultValue": "client_credentials",
      "allowedValues": [
        "code",
        "client_credentials"
      ]
    },
    "ClientId": {
      "type": "string",
      "metadata": {
        "description": "Client (or Application) ID of the Azure Active Directory application."
      },
      "defaultValue": ""
    },
    "ClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Client secret of the Azure Active Directory application."
      }
    },
    "wdatp_1_Connection_Name": {
      "type": "string",
      "defaultValue": "wdatp"
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('WinDefenderAppRestrictionLogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Global_Scope": {
              "type": "Scope",
              "actions": {
                "For_each": {
                  "type": "Foreach",
                  "foreach": "@triggerBody()?['Entities']",
                  "actions": {
                    "Condition": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('AgentName'))",
                              0
                            ]
                          },
                          {
                            "equals": [
                              "@items('For_each')?['Type']",
                              "host"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "MachineName": {
                          "type": "Scope",
                          "actions": {
                            "check_dns": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@variables('Dns')",
                                      "."
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Set_variable": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "FQDN",
                                    "value": "@{replace(variables('AgentName'),'.','')}"
                                  },
                                  "runAfter": {}
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Set_variable_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "FQDN",
                                      "value": "@{concat(replace(variables('AgentName'),'.',''),variables('Dns'))}"
                                    },
                                    "runAfter": {}
                                  }
                                }
                              }
                            }
                          },
                          "runAfter": {}
                        },
                        "Machines_-_Get_list_of_machines": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/api/machines",
                            "queries": {
                              "$filter": "computerDnsName eq '@{variables('FQDN')}'"
                            }
                          },
                          "runAfter": {
                            "MachineName": [
                              "Succeeded"
                            ]
                          }
                        },
                        "For_each_2": {
                          "type": "Foreach",
                          "foreach": "@body('Machines_-_Get_list_of_machines')?['value']",
                          "actions": {
                            "Actions_-_Restrict_app_execution": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": {
                                  "Comment": "Restrict App initiated  from Sentinel "
                                },
                                "path": "/api/machines/@{encodeURIComponent(items('For_each_2')?['id'])}/restrictCodeExecution"
                              },
                              "runAfter": {}
                            }
                          },
                          "runAfter": {
                            "Machines_-_Get_list_of_machines": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {
                        "Set_dns": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Set_ComputerName": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "AgentName",
                        "value": "@{items('For_each')?['HostName']}"
                      },
                      "runAfter": {}
                    },
                    "Set_dns": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Dns",
                        "value": ".@{items('For_each')?['DnsDomain']}"
                      },
                      "runAfter": {
                        "Set_ComputerName": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {},
                  "runtimeConfiguration": {
                    "concurrency": {
                      "repetitions": 1
                    }
                  }
                }
              },
              "runAfter": {
                "FQDN": [
                  "Succeeded"
                ]
              }
            },
            "agent_Name": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "AgentName",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {}
            },
            "Dns": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Dns",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "agent_Name": [
                  "Succeeded"
                ]
              }
            },
            "FQDN": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "FQDN",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Dns": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "ManageOfficeTenantId": {
              "type": "String"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "path": "/subscribe"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "wdatp": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'wdatp')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('wdatp_1_Connection_Name'))]",
                "connectionName": "[parameters('wdatp_1_Connection_Name')]"
              },
              "azuresentinel": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel_Connection_Name'))]",
                "connectionName": "[parameters('azuresentinel_Connection_Name')]"
              }
            }
          },
          "ManageOfficeTenantId": {
            "value": "[parameters('ManageOfficeTenantId')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('wdatp_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuresentinel_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('azuresentinel_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azuresentinel')]"
        },
        "parameterValues": {
          "token:clientId": "[parameters('ClientId')]",
          "token:clientSecret": "[parameters('ClientSecret')]",
          "token:TenantId": "[parameters('ManageOfficeTenantId')]",
          "token:resourceUri": "[parameters('azuresentinel_token:resourceUri')]",
          "token:grantType": "[parameters('azuresentinel_token:grantType')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('wdatp_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'wdatp')]"
        }
      }
    }
  ],
  "outputs": {}
}